package maze.playerSet;

import maze.Map;
import maze.Position;
import maze.constant.Geo;

public class Strategy {
	Map map;
	PosStack stack;
	DirectionSet DirSet;
	boolean [][] visited;
	
	public Strategy (Map map, DirectionSet DirSet){
		this.map = new Map(map.getMapInfo(), map.getStart(), map.getGoal());
		this.DirSet = DirSet;
		stack = new PosStack();
		
		//get history map and make clean
		visited = new boolean[map.getMap().length][map.getMap()[0].length];
		for(int i=0; i<visited.length;i++)
			for(int j=0; j<visited[0].length; j++)
				visited[i][j] = false;
	}
	
	private boolean isGoal(Position curPos){
		if(curPos.toString().equals(map.getGoal().toString()) )
			return true;
		else return false;
	}
	
	private PosWithNext findNextMove(PosWithNext curPos){
		if(curPos == null) return null;
		if(isGoal(curPos) )
			return null;
		if(curPos.next == null){
			PosWithNext next= new PosWithNext( curPos.add(DirSet.firstDirection()));
			int x = curPos.x;
			int y = curPos.y;
			while(map.getMap()[x][y] != Geo.WALL && visited[x][y] != true){
				
			}
		}
			
	}
}
