package maze;

import maze.constant.Geo;

public class Map {
	private int [][] mapInfo; 
	int mapWidth;
	int mapHeight;
	int [][] map;
	Position start;
	Position goal;

	public Map (int w, int h){
		if( w<1 || h<1 ) return;
		setMapInfo(new int[w][h]);
		for(int i =0; i< h; i++){
			for(int j=0; j<w; j++){
				getMapInfo()[i][j] = Geo.EMPTY;
			}
		}
		start = new Position(0,0;)
		goal = new Position(w-1,h-1);
		map = makeMap(getMapInfo());
	}
	
	public Map ( int [][]info){
		if(info== null || info.length < 1 || info[0].length < 1 ) return;
		map = makeMap(info);
	}
	
	public int[][] makeMap(int [][] info){
		setMapInfo(info);
		mapHeight	= info.length;
		mapWidth 	= info[0].length; 
		int[][] map = new int[mapHeight+2][mapWidth+2];
		
		//converting info's boundary is WALL 
		for (int i=0; i<map.length; i++){
			for(int j=0; j<map[0].length; j++){
				if(i==0 || j==0 || i==(mapHeight+1) || j==(mapWidth+1)) 
					map[i][j] = Geo.WALL;
				else
					map[i][j] = info[i-1][j-1];
			}
		}
		
		return map;
	}
	
	public void printMap(){
		if(map == null || map.length < 1 || map[0].length < 1) {
			System.out.println("Ivaild Map");
			return;
		}
		
		for (int i=0; i<map.length; i++){
			for(int j=0; j<map[0].length; j++){
				if(map[i][j] == Geo.WALL)
					System.out.print("WW");
				else if (map[i][j] == Geo.EMPTY)
					System.out.print("  ");
			}
			System.out.print("\n");
		}
		
	}

	public int [][] getMapInfo() {
		return mapInfo;
	}
	
	public int getMapWidth() {
		return mapWidth;
	}

	public int getMapHeight() {
		return mapHeight;
	}

	public int[][] getMap() {
		return map;
	}


	public void setMapInfo(int [][] mapInfo) {
		this.mapInfo = mapInfo;
	}
}
